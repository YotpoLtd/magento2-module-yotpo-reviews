<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminSetOrderSyncStatusToCanceledTest">
        <annotations>
            <features value="Yotpo"/>
            <stories value="Set order sync status to canceled and verify if it working"/>
            <title value="Test canceled order sync status"/>
            <description value="Test canceled order sync status"/>
            <severity value="AVERAGE"/>
            <testCaseId value="MC-290"/>
            <group value="Yotpo"/>
        </annotations>

        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="LoginAsAdmin"/>
            <createData entity="FlatRateShippingMethodDefault" stepKey="setDefaultFlatRateShippingMethod"/>
            <createData entity="CashOnDeliveryPaymentMethodDefault" stepKey="cashOnDeliveryPaymentMethod"/>
            <createData entity="Simple_US_Customer_CA" stepKey="simpleCustomer"/>
            <createData entity="SimpleProduct_25" stepKey="simpleProduct">
                <field key="price">5</field>
            </createData>
        </before>

        <after>
            <deleteData createDataKey="simpleCustomer" stepKey="deleteSimpleCustomer"/>
            <deleteData createDataKey="simpleProduct" stepKey="deleteSimpleProduct"/>
            <amOnPage url="{{AdminLogoutPage.url}}" stepKey="amOnLogoutPage"/>
        </after>

        <actionGroup ref="prepareYotpoConfigurationToTestSync" stepKey="prepareYotpoConfiguration">
            <argument name="syncStatus" value="canceled"/>
        </actionGroup>

        <!--Create order.-->
        <actionGroup ref="NavigateToNewOrderPageExistingCustomerActionGroup" stepKey="navigateToNewOrderWithExistingCustomer">
            <argument name="customer" value="$$simpleCustomer$$"/>
        </actionGroup>
        <actionGroup ref="AddSimpleProductToOrderActionGroup" stepKey="addSimpleProductToOrder">
            <argument name="product" value="$$simpleProduct$$"/>
            <argument name="productQty" value="1"/>
        </actionGroup>
        <actionGroup ref="SelectCashOnDeliveryPaymentMethodActionGroup" stepKey="selectPaymentMethod"/>
        <actionGroup ref="OrderSelectFlatRateShippingActionGroup" stepKey="orderSelectFlatRateShippingMethod"/>
        <actionGroup ref="AdminSubmitOrderActionGroup" stepKey="submitOrder"/>
        <actionGroup ref="VerifyCreatedOrderInformationActionGroup" stepKey="verifyCreatedOrderInformation"/>
        <grabTextFrom selector="|Order # (\d+)|" stepKey="getOrderId"/>
        <actionGroup ref="OpenOrderByIdActionGroup" stepKey="openOrder">
            <argument name="orderId" value="$getOrderId"/>
        </actionGroup>
        <!--Cancel Order.-->
        <actionGroup ref="CancelPendingOrderActionGroup" stepKey="cancelPendingOrder"/>

        <!--AssertContains processing Canceled order -->
        <actionGroup ref="testOrderSync" stepKey="assertOrderSync"/>
    </test>
</tests>
